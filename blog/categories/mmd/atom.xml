<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: MMD | ktkr3d]]></title>
  <link href="http://ktkr3d.github.io/blog/categories/mmd/atom.xml" rel="self"/>
  <link href="http://ktkr3d.github.io/"/>
  <updated>2014-01-13T12:25:27+09:00</updated>
  <id>http://ktkr3d.github.io/</id>
  <author>
    <name><![CDATA[ktkr3d]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Irrlicht 1.9 trunk]]></title>
    <link href="http://ktkr3d.github.io/blog/2014/01/13/irrlicht-1-dot-9-trunk/"/>
    <updated>2014-01-13T11:10:00+09:00</updated>
    <id>http://ktkr3d.github.io/blog/2014/01/13/irrlicht-1-dot-9-trunk</id>
    <content type="html"><![CDATA[<p><a href="http://ktkr3d.github.io/images/irrlicht_1.9_trunk.png"><img src="/images/irrlicht_1.9_trunk.png" title="Irrlicht 1.9 trunk" alt="Irrlicht 1.9 trunk" /></a></p>

<p><a href="http://sourceforge.net/p/irrlicht/code/HEAD/tarball">http://sourceforge.net/p/irrlicht/code/HEAD/tarball</a></p>

<p>Irrlicht はオープンソースでマルチプラットフォーム対応の3D エンジンです。
Irrlicht 1.9 trunk を試してみたら、シェーダーのバグが修正されていました。</p>

<!-- more -->


<h4>実行環境</h4>

<table>
<thead>
<tr>
<th align="left">項目</th>
<th align="left">環境</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">ディストロ</td>
<td align="left">Ubuntu GNOME 14.04 a1</td>
</tr>
<tr>
<td align="left">デスクトップ環境</td>
<td align="left">GNOME Shell 3.11.3</td>
</tr>
<tr>
<td align="left">Linux カーネル</td>
<td align="left">3.12.0</td>
</tr>
<tr>
<td align="left">コンパイラ</td>
<td align="left">gcc/g++ 4.8.2</td>
</tr>
<tr>
<td align="left">ビデオカード</td>
<td align="left">GeForce GTX 560 Ti/PCIe/SSE2</td>
</tr>
</tbody>
</table>


<h4>ディレクトリ構成</h4>

<p>OS を入れ替える度に忘れてしまうのでメモ。</p>

<table>
<thead>
<tr>
<th align="left">内容</th>
<th align="left">パス</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Irrlicht 3D エンジン</td>
<td align="left">/mnt/common/tools/irrlicht-trunk</td>
</tr>
<tr>
<td align="left">Bullet</td>
<td align="left">/mnt/common/tools/bullet-2.76</td>
</tr>
<tr>
<td align="left">サウンドエンジン</td>
<td align="left">/mnt/common/tools/cAudio2.1.0-Linux_64</td>
</tr>
<tr>
<td align="left">アプリソース</td>
<td align="left">/mnt/common/home/Projects/Irrlicht/examples/XEffects</td>
</tr>
<tr>
<td align="left">IrrMMD</td>
<td align="left">/mnt/common/home/Projects/Irrlicht/examples/XEffects/irrmmd</td>
</tr>
<tr>
<td align="left">実行ディレクトリ</td>
<td align="left">/mnt/common/home/Projects/Irrlicht/bin/Linux</td>
</tr>
</tbody>
</table>


<p>Bullet とcAudio は以前ビルドしたものを再利用する。
.so を実行ディレクトリにコピーしておく。</p>

<p>IrrMMD(PMD/VMDローダ) は<code>http://gunload.web.fc2.com/irrlicht/download.html</code>からダウンロードする。</p>

<p><code>/mnt/common/tools/irrlicht-trunk/include/irrUString.h</code> は<code>http://irrlicht.sourceforge.net/forum//viewtopic.php?t=37296</code> からダウンロードする。</p>

<h4>前提パッケージ等</h4>

<p><code>bash
$ sudo apt-get -y install build-essential xserver-xorg-dev x11proto-xf86vidmode-dev libxxf86vm-dev mesa-common-dev libgl1-mesa-dev libglu1-mesa-dev libxext-dev libxcursor-dev
$ sudo apt-get install libfreetype6-dev freeglut3-dev libboost-dev libglew1.5-dev libtheora-dev libopenal-dev codeblocks
</code></p>

<h4>Irrlicht のビルド</h4>

<p><code>http://sourceforge.net/p/irrlicht/code/HEAD/tarball</code> のtrunk を選んで、<code>Download Snapshot</code> を押下する。</p>

<p><code>bash
$ cd /mnt/common/tools/irrlicht-trunk/source/Irrlicht
$ make -j4
</code></p>

<h4>Code::Blocks の設定</h4>

<p>Settings &ndash;> Compiler &ndash;> Search directories で設定</p>

<table>
<thead>
<tr>
<th align="left">分類</th>
<th align="left">パス</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">Compiler</td>
<td align="left">/mnt/common/tools/irrlicht-trunk/include</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/mnt/common/tools/cAudio2.1.0-Linux_64/include</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/mnt/common/tools/bullet-2.76/src</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/usr/include/freetype2</td>
</tr>
<tr>
<td align="left">Linker</td>
<td align="left">/mnt/common/tools/irrlicht-trunk/lib/Linux</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/mnt/common/tools/cAudio2.1.0-Linux_64/lib/linux-64</td>
</tr>
<tr>
<td align="left"></td>
<td align="left">/mnt/common/tools/bullet-2.76/lib_x86_64</td>
</tr>
</tbody>
</table>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MikuMikuPenguin]]></title>
    <link href="http://ktkr3d.github.io/blog/2014/01/12/mikumikupenguin/"/>
    <updated>2014-01-12T23:40:00+09:00</updated>
    <id>http://ktkr3d.github.io/blog/2014/01/12/mikumikupenguin</id>
    <content type="html"><![CDATA[<p><a href="http://ktkr3d.github.io/images/mikumikupenguin.png"><img src="/images/mikumikupenguin.png" title="MikuMikuPenguin" alt="MikuMikuPenguin" /></a></p>

<p><a href="https://github.com/sn0w75/MikuMikuPenguin">https://github.com/sn0w75/MikuMikuPenguin</a></p>

<p>ニコニコ動画でMikuMikuPenguin が公開されていたので、試してみました。
作成者の方に感謝です。今後に期待ですね。</p>

<!-- more -->


<h4>実行環境</h4>

<table>
<thead>
<tr>
<th align="left">項目</th>
<th align="left">環境</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">ディストロ</td>
<td align="left">Ubuntu GNOME 14.04 a1</td>
</tr>
<tr>
<td align="left">デスクトップ環境</td>
<td align="left">GNOME Shell 3.11.3</td>
</tr>
<tr>
<td align="left">Linux カーネル</td>
<td align="left">3.12.0</td>
</tr>
<tr>
<td align="left">コンパイラ</td>
<td align="left">gcc/g++ 4.8.2</td>
</tr>
<tr>
<td align="left">ビデオカード</td>
<td align="left">GeForce GTX 560 Ti/PCIe/SSE2</td>
</tr>
</tbody>
</table>


<h4>前提ライブラリ等</h4>

<p>確か、こんな感じで入れたと思う。</p>

<p><code>bash
$ sudo apt-get install git dialog automake autoconf libtool libglfw-dev libBullet-dev libglm-dev libSOIL-dev libSDL2-dev libsdl2-mixer-dev
</code></p>

<h4>ビルド</h4>

<p><code>bash
$ ./configure
$ make -j4
</code></p>

<h4>実行</h4>

<p>``` bash
$ ./pmx
This is PMXViewer, a demonstration using the MikuMikuPenguin library.
Usage: pmx [options] model_file.pmx motion_file.vmd
Options:
  -s    Play sound file to go with VMD motion</p>

<pre><code>Only formats compatible with your build of SDL2_mixer are accepted.
If libmmp was compiled without SDL2_mixer support, no music will play.
</code></pre>

<p>  &mdash;help    display this help and exit
  &mdash;version output version information and exit</p>

<p>FOR JAPANESE DOCUMENTATION, SEE:
&lt;file:///usr/local/share/mikumikupenguin/doc/README_JP.html></p>

<p>Report bugs to <a href="&#x6d;&#x61;&#105;&#108;&#116;&#111;&#58;&#105;&#98;&#101;&#x6e;&#x72;&#x75;&#x6e;&#x6e;&#105;&#x6e;&#x40;&#103;&#x6d;&#x61;&#105;&#x6c;&#46;&#x63;&#x6f;&#109;">&#x69;&#98;&#x65;&#x6e;&#x72;&#117;&#110;&#110;&#x69;&#110;&#64;&#x67;&#109;&#97;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;</a> (English or Japanese is ok).
```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Irrlicht Android Media Player]]></title>
    <link href="http://ktkr3d.github.io/blog/2013/08/11/irrlicht-android-media-player/"/>
    <updated>2013-08-11T03:47:00+09:00</updated>
    <id>http://ktkr3d.github.io/blog/2013/08/11/irrlicht-android-media-player</id>
    <content type="html"><![CDATA[<p><a href="http://ktkr3d.github.io/images/irrlicht_android_player_tab.png"><img src="/images/irrlicht_android_player_tab_tn.png"></a></p>

<p>Android のNative Activity で実装したアプリからオーディオの再生ができたので、ミクさんが踊ってくれるメディアプレイヤー的なものにしてみました。</p>

<!-- more -->


<h4>PMD とVMD のロード処理の修正</h4>

<p>以前のソースコードがHDD の故障とともに消えてしまったので、コードやMakefile を書きなおしていたところ、うまくロードできないPMD、VMD があることに気が付きました。
BinaryReader のロード処理で、プロセッサ種別に依存してうまく取り込めない(ARM CPU で構造体のアラインメントが異なる)のが原因のようです。<br/>
以前のバージョンのコンパイラ＋古いバージョンのAndroid デバイスでは動いていたような気がするのに。
原因は単純なので修正しておきました。</p>

<h4>Native Activity からのWakeLock の制御</h4>

<p>少し経つと画面が暗くなって、画面が非表示状態になります。
PowerManager のWakeLock を制御すれば良さそうです。
Android NDK のNative Activity の場合はJNI を経由してPower Manager へアクセスするのかな。
後で調べておこう。</p>

<h4>画面インタフェース</h4>

<ul>
<li><strong>パネル表示切替ボタン「⇅」</strong><br/>
画面下部の設定用のインタフェースの表示/非表示を切り替える。曲目リスト、モデルリスト、環境設定のタブがある。</li>
<li><strong>ミュート切替ボタン「♪」</strong><br/>
音声の出力状態を切り替える。OpenSL ES の<code>(*uriPlayerVolume)-&gt;SetMute()</code>をコールしている。</li>
<li><strong>再生/停止切替ボタン「▶」</strong><br/>
モーションと音声の再生/停止を切り替える。アニメーションスピードの切り替えと<code>(*uriPlayerPlay)-&gt;SetPlayState()</code>をコールしている。モデルまたは曲を変更した場合は最初から開始する。</li>
<li><strong>終了ボタン「×」</strong><br/>
アプリケーションを終了する。</li>
<li><strong>カメラ位置スクロールバー</strong><br/>
カメラの位置を前後させる。</li>
</ul>


<h4>TODO</h4>

<ul>
<li><code>state-&gt;onAppCmd</code> にコールバック関数を設定しているのにキックされない原因を調べる。</li>
<li><code>pFileSystem-&gt;createFileList()</code> が失敗する原因を調べる。</li>
<li>タスク復帰時に描画コンテキストをリストアする。</li>
<li>GUI のSkin を変更する。</li>
<li>Android 固有の入力イベントに対応する。</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Compiling Irrlicht ogl-es branch for Android]]></title>
    <link href="http://ktkr3d.github.io/blog/2013/08/04/compiling-irrlicht-ogl-es-branch-for-android/"/>
    <updated>2013-08-04T04:04:00+09:00</updated>
    <id>http://ktkr3d.github.io/blog/2013/08/04/compiling-irrlicht-ogl-es-branch-for-android</id>
    <content type="html"><![CDATA[<p><a href="http://ktkr3d.github.io/images/irrlicht_ogl-es_android.png"><img src="/images/irrlicht_ogl-es_android_tn.png"></a></p>

<ul>
<li>Compiling Irrlicht ogl-es branch for Android on Ubuntu GNOME 13.10 x86_64.</li>
<li>Native C/C++ Android Application (Native Activity).</li>
<li>Fullscreen (1080x1920)</li>
<li>Input Event Receiver</li>
<li>True Type Font (FreeType2)</li>
<li>OpenSL ES (Native Audio)</li>
</ul>


<!-- more -->


<h4>Environment</h4>

<ul>
<li>Android SDK: 22.0.5</li>
<li>Android NDK: r9</li>
<li>Android Device: Android 4.1.2 (API level 16)</li>
<li>Irrlicht 1.9 [r4528]</li>
</ul>


<h4>Download Irrlicht ogl-es branch</h4>

<p><code>http://sourceforge.net/p/irrlicht/code/</code></p>

<ol>
<li>Select <code>branches</code>, <code>ogl-es</code>, <code>Download Snapshot</code>.</li>
<li>Download.</li>
<li>Extract.</li>
</ol>


<h4>Compile Irrlicht Library</h4>

<p><code>bash
$ cd source/Irrlicht/Andorid
$ ndk-build -j4
</code></p>

<p>&ndash;> <code>lib/Android/libirrlicht.a</code></p>

<h4>Build example</h4>

<p><code>bash
$ cd examples/17.HelloWorld_Mobile
$ android update project --path . --target android-16
$ ndk-build -j4
$ ant debug
</code></p>

<p>&ndash;> <code>examples/17.HellowWorld_Mobile/HelloWorldMobile-debug.apk</code></p>

<h4>TrueType Font</h4>

<p><code>include/irrUString.h</code>, <code>jni/CGUITTFont.h</code>, <code>jni/CGUITTFont.cpp</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android NDK で日本語表示してみた]]></title>
    <link href="http://ktkr3d.github.io/blog/2011/08/10/android-ndk/"/>
    <updated>2011-08-10T21:55:28+09:00</updated>
    <id>http://ktkr3d.github.io/blog/2011/08/10/android-ndk</id>
    <content type="html"><![CDATA[<p><a href="/images/uploads/2011/08/android_ndk_irrlicht_pmd_vmd_freetype.png"><img src="/images/uploads/2011/08/android_ndk_irrlicht_pmd_vmd_freetype.png" alt="android ndk irrlicht pmd vmd freetype" /></a></p>

<p>Proton SDK 上のIrrlicht ではGUIEnvironment がうまく取得できなかったので、Proton SDK を外した。素のIrrlicht にしたら、画像や文字の表示に問題なかった。ついでに、FreeType を取り込んでTrueType のフォントで日本語を表示してみた。
Proton SDK を外したら、なぜかIrrlicht 上の幅と高さが半分くらいになってしまったので、直さないと。GLES2 にも移行したいところ。</p>

<p><a href="/images/uploads/2011/08/android_ndk_irrlicht_pmd_vmd_fullscreen.png"><img src="/images/uploads/2011/08/android_ndk_irrlicht_pmd_vmd_fullscreen.png" alt="android ndk irrlicht pmd vmd fullscreen" /></a></p>

<p>AndroidManifest.xml を修正したら、フルスクリーンになって最大解像度が有効になった。</p>

<p><a href="/images/uploads/2011/08/android_ndk_pmd_homerun.png"><img src="/images/uploads/2011/08/android_ndk_pmd_homerun.png" alt="android ndk pmd vmd irrlicht freetype" /></a></p>

<p>いろいろなボタンをつけてみた。</p>
]]></content>
  </entry>
  
</feed>
